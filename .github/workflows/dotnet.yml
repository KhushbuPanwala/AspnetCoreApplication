name: aspdotnet

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install Dependencies
      run: npm install
   
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Restore dependencies
      run: cd AspnetCoreApplication/ && dotnet restore
    - name: Build
      run: cd AspnetCoreApplication/ && dotnet build --configuration Release --no-restore /p:DebugType=None
    - name: Test
      run: cd AspnetCoreApplication/ && dotnet test --no-build --verbosity normal
    - name: Upload Build Publish Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Publish
        run: cd AspnetCoreApplication/ && dotnet publish
        path: /home/runner/work/AspnetCoreApplication/AspnetCoreApplication/AspnetCoreApplication/bin/Debug/netcoreapp3.1/publish/
    - name: Checkout Build Artifact
      uses: actions/checkout@v2
      with:
        path: cd AspnetCoreApplication/bin/Debug/netcoreapp3.1/publish/
    - name: Download Build Publish Artifact
      uses: actions/download-artifact@v2
    - name: Display structure of downloaded files
      run: ls -R
      
      
          
